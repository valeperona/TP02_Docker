services:
  db-qa:
    image: postgres:16-alpine
    container_name: tp02-db-qa
    environment:
      POSTGRES_USER: ${QA_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${QA_DB_PASS:-postgres}
      POSTGRES_DB: ${QA_DB_NAME:-notesqa}
    volumes:
      - pgdata_qa:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${QA_DB_USER:-postgres} -d ${QA_DB_NAME:-notesqa}"]
      interval: 5s
      timeout: 3s
      retries: 15

  api-qa:
    image: valeperona/tp02-docker-api:v1.0  # <- en Parte 7 cambiá a :v1.0
    container_name: tp02-api-qa
    depends_on:
      db-qa:
        condition: service_healthy
    environment:
      APP_ENV: qa
      LOG_LEVEL: debug
      ConnectionStrings__Default: Host=db-qa;Username=${QA_DB_USER:-postgres};Password=${QA_DB_PASS:-postgres};Database=${QA_DB_NAME:-notesqa}
    ports:
      - "8081:80"

  db-prod:
    image: postgres:16-alpine
    container_name: tp02-db-prod
    environment:
      POSTGRES_USER: ${PROD_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${PROD_DB_PASS:-postgres}
      POSTGRES_DB: ${PROD_DB_NAME:-notesprod}
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PROD_DB_USER:-postgres} -d ${PROD_DB_NAME:-notesprod}"]
      interval: 5s
      timeout: 3s
      retries: 15

  api-prod:
    image: valeperona/tp02-docker-api:v1.0   # <- en Parte 7 cambiá a :v1.0
    container_name: tp02-api-prod
    depends_on:
      db-prod:
        condition: service_healthy
    environment:
      APP_ENV: prod
      LOG_LEVEL: warning
      ConnectionStrings__Default: Host=db-prod;Username=${PROD_DB_USER:-postgres};Password=${PROD_DB_PASS:-postgres};Database=${PROD_DB_NAME:-notesprod}
    ports:
      - "8082:80"

volumes:
  pgdata_qa:
  pgdata_prod:
